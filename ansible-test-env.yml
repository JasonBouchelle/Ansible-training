- name: create containers to use as ansible managed nodes
  hosts: localhost
  become: yes
  vars:
    docker_containers:
      - name: ansible-h1
        image: ansible-host-min:latest
        state: started
      - name: ansible-h2
        image: ansible-host-min:latest
        state: started   
    container_ips: |
      Ansible-controller IP address is {{ ansible_controller_ip.stdout }}        
      Ansible-h1 IP address is {{ ansible_h1_ip.stdout }}
      Ansible-h2 IP address is {{ ansible_h2_ip.stdout }}     
  tasks:
    - name: Start Ansible Controller using local container image
      docker_container:
        name: ansible-controller
        image: ansible-controller-min:latest
        state: started  
      tags: server  
    #- name: Wait for the container to be ready
    #  wait_for:
    #    port: 22  # Change if SSH runs on a different port
    #    host: "ansible-controller"  # Replace with your actual host or IP
    #    state: started
    #    timeout: 30
    #  tags: server     
    - name: Create .ssh directory
      community.docker.docker_container_exec:
        container: ansible-controller
        command: mkdir -p /root/.ssh
      tags: server  
    - name: Chmod 700 /root/.ssh
      community.docker.docker_container_exec:
        container: ansible-controller
        command: chmod 700 /root/.ssh
      tags: server  
    - name: Create ssh key   
      community.docker.docker_container_exec:
        container: ansible-controller
        command: ssh-keygen -t rsa -b 4096 -P '' -C 'ansible-controller-ssh-key' -f /root/.ssh/id_rsa      
      tags: server 
    - name: create pub_key variable    
      community.docker.docker_container_exec:
        container: ansible-controller
        command: cat /root/.ssh/id_rsa.pub
      register: pub_key
      tags: server
        
    - name: Start two ansible hosts using local container image
      docker_container:
        name: "{{ item.name }}"
        image: "{{ item.image }}"
        state: "{{ item.state }}"  
      loop: "{{ docker_containers }}" 
      tags: hosts
    - name: Create ssh folder ansible-h1
      community.docker.docker_container_exec:
        container: ansible-h1
        command:  mkdir /root/.ssh
      tags: hosts  
    - name: Chmod /root/.ssh
      community.docker.docker_container_exec:
        container: ansible-h1
        command:  chmod 700 /root/.ssh
      tags: hosts  
    - name: touch authorized_keys
      community.docker.docker_container_exec:
        container: ansible-h1
        command: touch /root/.ssh/authorized_keys
      tags: hosts 
    - name: Chmod authorized_keys
      community.docker.docker_container_exec:
        container: ansible-h1
        command: chmod 600 /root/.ssh/authorized_keys 
      tags: hosts
    - name: Set SSH key
      community.docker.docker_container_exec:
        container: ansible-h1
        command: echo '{{ pub_key }}' >> /root/.ssh/authorized_keys
      tags: hosts  

    - name: Create ssh folder ansible-h2
      community.docker.docker_container_exec:
        container: ansible-h2
        command:  mkdir /root/.ssh
      tags: hosts  
    - name: Chmod /root/.ssh
      community.docker.docker_container_exec:
        container: ansible-h2
        command:  chmod 700 /root/.ssh
      tags: hosts  
    - name: touch authorized_keys
      community.docker.docker_container_exec:
        container: ansible-h2
        command: touch /root/.ssh/authorized_keys
      tags: hosts 
    - name: Chmod authorized_keys
      community.docker.docker_container_exec:
        container: ansible-h2
        command: chmod 600 /root/.ssh/authorized_keys 
      tags: hosts
    - name: Set SSH key
      community.docker.docker_container_exec:
        container: ansible-h2
        command: echo '{{ pub_key }}' >> /root/.ssh/authorized_keys
      tags: hosts   

# Get IP addresses for docker containers and print to the console 
    - name: Get IP address of ansible-controller container
      command: docker exec ansible-controller sh -c "ifconfig -a | grep inet | grep 172 | awk '{print $1, $2}' | awk -F ":" '{print $2}'"
      register: ansible_controller_ip  
    - name: Get IP address of ansible-h1 container
      command: docker exec ansible-h1 sh -c "ifconfig -a | grep inet | grep 172 | awk '{print $1, $2}' | awk -F ":" '{print $2}'"
      register: ansible_h1_ip  
    - name: Get IP address of ansible-h2 container
      command: docker exec ansible-h2 sh -c "ifconfig -a | grep inet | grep 172 | awk '{print $1, $2}' | awk -F ":" '{print $2}'"
      register: ansible_h2_ip   
    - name: "Print ip address for ansible-controller"
      debug:
        msg: "{{ container_ips }}"



