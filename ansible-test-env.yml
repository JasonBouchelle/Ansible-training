- name: create containers to use as ansible managed nodes
  hosts: localhost
  become: yes
  vars:
    docker_containers:
      - name: ansible-h1
        image: ansible-host-min:latest
        state: started
      - name: ansible-h2
        image: ansible-host-min:latest
        state: started   
    container_ips: |
      Ansible-controller IP address is {{ ansible_controller_ip.stdout }}        
      Ansible-h1 IP address is {{ ansible_h1_ip.stdout }}
      Ansible-h2 IP address is {{ ansible_h2_ip.stdout }}     
  tasks:
  #Ansible-controller configuration
    - name: Start Ansible Controller using local container image
      docker_container:
        name: ansible-controller
        image: ansible-controller-min:latest
        state: started  
      tags: server  
    - name: Create .ssh directory
      community.docker.docker_container_exec:
        container: ansible-controller
        command: mkdir -p /root/.ssh
      tags: server  
    - name: Chmod 700 /root/.ssh
      community.docker.docker_container_exec:
        container: ansible-controller
        command: chmod 700 /root/.ssh
      tags: server  
    - name: Create ssh key   
      community.docker.docker_container_exec:
        container: ansible-controller
        command: ssh-keygen -t rsa -b 4096 -P '' -C 'ansible-controller-ssh-key' -f /root/.ssh/id_rsa      
      tags: server 
    - name: Create pub_key variable
      command: docker exec ansible-controller sh -c "cat /root/.ssh/id_rsa.pub"
      register: pub_key      
    - name: Start two ansible hosts using local container image
      docker_container:
        name: "{{ item.name }}"
        image: "{{ item.image }}"
        state: "{{ item.state }}"  
      loop: "{{ docker_containers }}" 
      tags: hosts

  #ansible-h1 configuration     
    - name: Allow root login via ssh
      community.docker.docker_container_exec:
        container: "{{ item.name }}"
        command: sed -i 's/#PermitRootLogin prohibit-password/PermitRootLogin yes/' /etc/ssh/sshd_config 
      loop: "{{ docker_containers }}"   
    - name: Create ssh folder ansible-h1
      community.docker.docker_container_exec:
        container: "{{ item.name }}"
        command:  mkdir /root/.ssh
      loop: "{{ docker_containers }}"  
    - name: touch authorized_keys
      community.docker.docker_container_exec:
        container: "{{ item.name }}"
        command: touch /root/.ssh/authorized_keys
      loop: "{{ docker_containers }}"   
      tags: hosts      
    - name: Chmod /root/.ssh
      community.docker.docker_container_exec:
        container: "{{ item.name }}"
        command:  chmod 700 /root/.ssh
      loop: "{{ docker_containers }}"   
      tags: hosts  
    - name: Chmod authorized_keys
      community.docker.docker_container_exec:
        container: "{{ item.name }}"
        command: chmod 600 /root/.ssh/authorized_keys 
      loop: "{{ docker_containers }}"   
      tags: hosts   
    - name: Restart ssh service 
      community.docker.docker_container_exec:
        container: "{{ item.name }}"
        command: pkill sshd  
      loop: "{{ docker_containers }}"      
    - name: Change root password
      community.docker.docker_container_exec:
        container: "{{ item.name }}"
        command: sh -c "echo 'root:{{ lookup('env', 'ansible_root_pass') }}' | chpasswd" 
      loop: "{{ docker_containers }}"      
    - name: Add pub_key to /root/.ssh/authorized_keys file ansible-h1
      command: docker exec {{ item.name }} sh -c "echo {{ pub_key.stdout }} >> /root/.ssh/authorized_keys"  
      loop: "{{ docker_containers }}" 
    - name: Disable root login via ssh
      community.docker.docker_container_exec:
        container: "{{ item.name }}"
        command: sed -i 's/PermitRootLogin yes/#PermitRootLogin prohibit-password/' /etc/ssh/sshd_config  
      loop: "{{ docker_containers }}"    
    - name: Restart sshd after disable root login
      community.docker.docker_container_exec:
        container:  "{{ item.name }}"
        command: pkill sshd 
      loop: "{{ docker_containers }}"      
      
 
 #Get IP addresses for docker containers and print to the console 
    - name: Get IP address of ansible-controller container
      command: docker exec ansible-controller sh -c "ifconfig -a | grep inet | grep 172 | awk '{print $1, $2}' | awk -F ":" '{print $2}'"
      register: ansible_controller_ip  
    - name: Get IP address of ansible-h1 container
      command: docker exec ansible-h1 sh -c "ifconfig -a | grep inet | grep 172 | awk '{print $1, $2}' | awk -F ":" '{print $2}'"
      register: ansible_h1_ip  
    - name: Get IP address of ansible-h2 container
      command: docker exec ansible-h2 sh -c "ifconfig -a | grep inet | grep 172 | awk '{print $1, $2}' | awk -F ":" '{print $2}'"
      register: ansible_h2_ip   
    - name: "Print ip address for ansible-controller"
      debug:
        msg: "{{ container_ips }}"

    - name: List docker info
      command: docker ps -a
      register: docker_info
    - name: Print docker info
      debug: 
        msg: "{{ docker_info }}"      
